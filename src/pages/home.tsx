import Head from "next/head";
import { type GetServerSideProps } from "next";

import { type FormEvent, useEffect, useState } from "react";
import { type Socket } from "socket.io-client";
import io from "socket.io-client";
import { TextInput, Button } from "@mantine/core";

let socket: Socket | null = null;

const HomePage = () => {
  const [room, setRoom] = useState("");

  const onSubmit = (e: FormEvent) => {
    e.preventDefault();
    if (!room || !socket) return;
    socket.emit("unirse-room", room, (response: unknown) => {
      console.log(response);
    });
  };

  useEffect(() => {
    socket = io();

    socket.on("msg", (msg) => {
      console.log(msg);
    });

    return () => {
      socket?.disconnect();
    };
  }, []);

  return (
    <>
      <Head>
        <title>Basta App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen bg-fondo">
        <form
          onSubmit={onSubmit}
          className="m-auto flex aspect-square w-96 flex-col items-center justify-center rounded-lg "
        >
          <TextInput
            value={room}
            placeholder="Ingresa room..."
            onChange={(e) => setRoom(e.target.value)}
          />
          <br />
          <Button className="bg-resaltar" type="submit">
            Unirse
          </Button>
        </form>
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (_) => {
  // Obtener la URL base del servidor desde una variable de entorno o usar el valor directamente
  const baseURL = process.env.NEXT_PUBLIC_BASE_URL || "http://localhost:3000";

  // Construir la URL absoluta para la solicitud
  const url = `${baseURL}/api/socket`;

  await fetch(url);
  return {
    props: {},
  };
};

export default HomePage;
